{"version":3,"sources":["../src/captcha-clientside-workflow.js"],"names":["window","showHtml","captchaStyleName","bdcElement","captchaEndpoint","captchaHtmlUrl","commonFunctions","buildUrl","get","c","ajax","response","status","Error","innerHTML","responseText","replace","addInitScriptToBody","document","bodyElement","body","getElementsByTagName","defaultSettings","String","prototype","trim","this","xhr","x","XMLHttpRequest","e","ActiveXObject","url","callback","readyState","onreadystatechange","open","send","params","p","key","push","test","join","scriptInclude","className","script","createElement","src","addScriptToBody","getElementsByClassName","length","append","initScriptIncluded","parentNode","removeChild","captchaId","getElementById","initScriptIncludeUrl","t","value","cs","Captcha","init","configuredSettings","settings","settingValue","bdcElements","getAttribute","getInstance","savedCaptchaStyleName","BotDetect","getInstanceByStyleName"],"mappings":"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","file":"captcha-clientside-workflow.min.js","sourcesContent":["(function(window) {\r\n  'use strict';\r\n  \r\n  var document = window.document,\r\n      bodyElement = document.body || document.getElementsByTagName('body')[0];\r\n  \r\n  var defaultSettings = {\r\n    captchaEndpoint: '' // e.g. '/user-app/botdetectcaptcha' or '/user-app/simplebotdetect.php' or '/user-app/BotDetectCaptcha.ashx'\r\n  };\r\n  \r\n  // Polyfill for trim() method\r\n  if (!String.prototype.trim) {\r\n    String.prototype.trim = function () {\r\n      return this.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\r\n    };\r\n  }\r\n  \r\n  // Ajax helper.\r\n  var ajax = {\r\n    xhr: function() {\r\n      var x = null;\r\n      try { x = new XMLHttpRequest(); return x; } catch (e) {}\r\n      try { x = new ActiveXObject('MSXML2.XMLHTTP.5.0'); return x; } catch (e) {}\r\n      try { x = new ActiveXObject('MSXML2.XMLHTTP.4.0'); return x; } catch (e) {}\r\n      try { x = new ActiveXObject('MSXML2.XMLHTTP.3.0'); return x; } catch (e) {}\r\n      try { x = new ActiveXObject('MSXML2.XMLHTTP'); return x; } catch (e) {}\r\n      try { x = new ActiveXObject('Microsoft.XMLHTTP'); return x; } catch (e) {}\r\n      return x;\r\n    },\r\n    \r\n    get: function(url, callback) {\r\n      var xhr = this.xhr();\r\n      if (xhr && xhr.readyState === 0) {\r\n        xhr.onreadystatechange = function() {\r\n          if (xhr.readyState === 4) {\r\n            callback(xhr);\r\n          }\r\n        };\r\n        xhr.open('GET', url, true);\r\n        xhr.send();\r\n      }\r\n    }\r\n  };\r\n\r\n  // The common functions that will be shared to other javascript frameworks.\r\n  var commonFunctions = {\r\n    // build url with parameters\r\n    buildUrl: function(url, params) {\r\n      var p = [];\r\n\r\n      for (var key in params) {\r\n        if (typeof key === 'string') {\r\n          p.push(key + '=' + params[key]);\r\n        }\r\n      }\r\n\r\n      var hasParamsPattern = /\\?+/g;\r\n      return hasParamsPattern.test(url) ? (url + '&' + p.join('&')) : (url + '?' + p.join('&')); \r\n    },\r\n\r\n    // create script include element\r\n    scriptInclude: function(url, className) {\r\n      var script = document.createElement('script');\r\n          script.src = url;\r\n          script.className = className;\r\n      return script;\r\n    },\r\n\r\n    // Add BotDetect client-side script include to body element.\r\n    addScriptToBody: function(captchaEndpoint) {\r\n      if (document.getElementsByClassName('BDC_ScriptInclude').length !== 0) {\r\n        // BotDetect client-side script is already added\r\n        return;\r\n      }\r\n\r\n      // build BotDetect client-side script include url\r\n      var url = this.buildUrl(captchaEndpoint, {\r\n        get: 'script-include'\r\n      });\r\n\r\n      bodyElement.append(this.scriptInclude(url, 'BDC_ScriptInclude'));\r\n    },\r\n\r\n    // Add BotDetect init script include to body element.\r\n    addInitScriptToBody: function(captchaStyleName, captchaEndpoint) {\r\n      // remove included BotDetect init script if it exists\r\n      var initScriptIncluded = document.getElementsByClassName('BDC_InitScriptInclude');\r\n      if (initScriptIncluded.length !== 0) {\r\n        initScriptIncluded[0].parentNode.removeChild(initScriptIncluded[0]);\r\n      }\r\n\r\n      var captchaId = document.getElementById('BDC_VCID_' + captchaStyleName);\r\n\r\n      if (!captchaId) {\r\n        return;\r\n      }\r\n\r\n      // build BotDetect init script include url.\r\n      var initScriptIncludeUrl = this.buildUrl(captchaEndpoint, {\r\n        get: 'init-script-include',\r\n        c: captchaStyleName,\r\n        t: captchaId.value,\r\n        cs: '2'\r\n      });\r\n\r\n      bodyElement.append(this.scriptInclude(initScriptIncludeUrl, 'BDC_InitScriptInclude'));\r\n    }\r\n\r\n  };\r\n\r\n  // Display captcha html markup in view.\r\n  function showHtml(captchaStyleName, bdcElement, captchaEndpoint) {\r\n    // build captcha html url\r\n    var captchaHtmlUrl = commonFunctions.buildUrl(captchaEndpoint, {\r\n      get: 'html',\r\n      c: captchaStyleName\r\n    });\r\n\r\n    ajax.get(captchaHtmlUrl, function(response) {\r\n      if (response.status === 200) {\r\n        bdcElement.innerHTML = response.responseText.replace(/<script.*<\\/script>/g, '');\r\n        commonFunctions.addInitScriptToBody(captchaStyleName, captchaEndpoint);\r\n      } else {\r\n        throw new Error('Can not load captcha html');\r\n      }\r\n    });\r\n  }\r\n  \r\n  var Captcha = Captcha || {};\r\n  \r\n  Captcha.init = function(configuredSettings) {\r\n    var settings = {};\r\n    configuredSettings = configuredSettings || {};\r\n    for (var key in defaultSettings) {\r\n      var settingValue = configuredSettings[key];\r\n      settings[key] = (typeof settingValue === 'undefined') ? defaultSettings[key] : settingValue;\r\n    }\r\n\r\n    // remove the '/' last char of url if it exists\r\n    settings.captchaEndpoint = settings.captchaEndpoint.replace(/\\/+$/i, '');\r\n\r\n    // show captcha html on DOM content loaded\r\n    document.onreadystatechange = function () {\r\n      if (document.readyState === \"complete\") {\r\n        // get botdetect-captcha element for showing captcha html\r\n        var bdcElements = document.getElementsByClassName('botdetect-captcha');\r\n\r\n        if (bdcElements.length === 0) {\r\n          return;\r\n        }\r\n        \r\n        // we currently support only one captcha on a page\r\n        var bdcElement = bdcElements[0];\r\n        \r\n        // captcha style name\r\n        var captchaStyleName = bdcElement.getAttribute('data-stylename');\r\n\r\n        if (!captchaStyleName) {\r\n          captchaStyleName = 'defaultCaptcha';\r\n        }\r\n    \r\n        // save captchaStyleName in window object, that will be used in Captcha.getInstance() for getting BotDetect instance\r\n        window['bdc_clientside_style_name'] = captchaStyleName;\r\n\r\n        commonFunctions.addScriptToBody(settings.captchaEndpoint);\r\n        showHtml(captchaStyleName, bdcElement, settings.captchaEndpoint);\r\n      }\r\n    };\r\n  };\r\n  \r\n  Captcha.getInstance = function() {\r\n    var savedCaptchaStyleName = window['bdc_clientside_style_name'];\r\n    \r\n    if (!savedCaptchaStyleName) {\r\n      return null;\r\n    }\r\n\r\n    return BotDetect.getInstanceByStyleName(savedCaptchaStyleName);\r\n  };\r\n \r\n  window.Captcha = Captcha;\r\n}(window));\r\n"]}